<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>container on 伊恩的開發狂想</title><link>https://eandev.com/categories/container/</link><description>Recent content in container on 伊恩的開發狂想</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Mon, 20 Feb 2023 16:13:07 +0000</lastBuildDate><atom:link href="https://eandev.com/categories/container/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker | 建立 PostgreSQL 的 container 時，同時完成資料庫的初始化</title><link>https://eandev.com/post/container/docker-postgresql-initialization-scripts/</link><pubDate>Mon, 20 Feb 2023 16:13:07 +0000</pubDate><guid>https://eandev.com/post/container/docker-postgresql-initialization-scripts/</guid><description>&lt;p>現在都可以使用 Container 的方式來運行資料庫，那麼。是否有辦法在 Image 建立 Container 的當下，就一併完成資料庫 schema 的設定？&lt;/p>
&lt;p>若是可以，在啟動 PostgreSQL Image 時，就已經完成初始化資料庫的 container ，可以享受一些好處。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>簡化部署流程：在建立 Container 時，自動完成初始化資料庫的過程，可以大幅簡化部署流程。只需要運行一個命令，就可以創建已經包含初始化資料庫的 Container，而不需要再手動初始化資料庫。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自動化測試：例如在每次測試運行時，都使用相同的的資料庫，確保測試結果一致性和可靠性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方便協作：不同的開發人員可以使用相同的初始化資料庫 Continaer，確保在開發和測試過程中，使用相同的資料庫，減少開發和測試之間的差異。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>🔖 長話短說 🔖&lt;/p>
&lt;ul>
&lt;li>若要讓 PostgreSQL container 建立的同時，完成資料庫 schema 初始化。要在在建立 Docker Image 的同時，把 &lt;code>init.sql&lt;/code> 複制到 &lt;code>/docker-entrypoint-initdb.d/&lt;/code>&lt;/li>
&lt;li>&lt;code>docker-entrypoint-initdb.d&lt;/code> 可放入多個 .sql 檔，其執行順序依地區設定的檔名順序。預設為 &lt;code>en_US.utf8&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>使用 Azure Pipelines / Jenkins 建置 Docker image</title><link>https://eandev.com/post/series/build-automated-deploy/build-docker-image/</link><pubDate>Wed, 11 Jan 2023 07:01:17 +0000</pubDate><guid>https://eandev.com/post/series/build-automated-deploy/build-docker-image/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/1906">2019 iT 邦幫忙鐵人賽&lt;/a>文章補完計劃，&lt;a href="https://eandev.com/post/series/build-automated-deploy/build-ci-cd-from-scratch/#container">從零開始建立自動化發佈的流水線&lt;/a> Container 篇&lt;/p>
&lt;/blockquote>
&lt;p>在上一篇 &lt;a href="https://eandev.com/post/series/build-automated-deploy/container-build-execution-environment-required-ci/">使用 Container 建立 CI 所需要的建置環境&lt;/a> 中，初步了解如何在 Travis CI、Azure DevOps、Jenkins 中，使用 Docker 來建立 CI 運行 Build、Test 所需的環境。&lt;/p>
&lt;p>接著，試著運用 Azure DevOps、Jenkins 來建立 Docker image 的 Artifact。&lt;/p></description></item><item><title>使用 Container 建立 CI 所需要的建置環境</title><link>https://eandev.com/post/series/build-automated-deploy/container-build-execution-environment-required-ci/</link><pubDate>Tue, 10 Jan 2023 16:15:41 +0000</pubDate><guid>https://eandev.com/post/series/build-automated-deploy/container-build-execution-environment-required-ci/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/1906">2019 iT 邦幫忙鐵人賽&lt;/a>文章補完計劃，&lt;a href="https://eandev.com/post/series/build-automated-deploy/build-ci-cd-from-scratch/#container">從零開始建立自動化發佈的流水線&lt;/a> Container 篇&lt;/p>
&lt;/blockquote>
&lt;p>在 &lt;a href="https://eandev.com/post/series/build-automated-deploy/docker-operate/">Docker 操作簡介&lt;/a> 中，初步了解 Docker、dockerfile、docker-compose 的操作方法。&lt;/p>
&lt;p>接下來，要與 CI Server 搭配使用，讓 CI Server 可以依據設定檔，使用 docker 的方式，建置出執行 CI 所需要的環境。&lt;/p></description></item><item><title>Docker 操作簡介 - command / dockerfile / docker-compose</title><link>https://eandev.com/post/series/build-automated-deploy/docker-operate/</link><pubDate>Mon, 09 Jan 2023 01:47:58 +0000</pubDate><guid>https://eandev.com/post/series/build-automated-deploy/docker-operate/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/1906">2019 iT 邦幫忙鐵人賽&lt;/a>文章補完計劃，&lt;a href="https://eandev.com/post/series/build-automated-deploy/build-ci-cd-from-scratch/#ontainer">從零開始建立自動化發佈的流水線&lt;/a> Container 篇&lt;/p>
&lt;/blockquote>
&lt;p>在上一篇 &lt;a href="https://eandev.com/post/series/build-automated-deploy/container-intro/">部署新境界 - 使用 Container 簡化流程&lt;/a> 中，初步了解 Virtual Machine 與 Container 的差異、Docker 的歷史背景與安裝方式。&lt;/p>
&lt;p>接下來，讓我們來進一步了解 Docker 相關的指令與操作方式。&lt;/p></description></item><item><title>部署新境界 - 使用 Container 簡化流程</title><link>https://eandev.com/post/series/build-automated-deploy/container-intro/</link><pubDate>Fri, 19 Aug 2022 14:15:18 +0000</pubDate><guid>https://eandev.com/post/series/build-automated-deploy/container-intro/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/1906">2019 iT 邦幫忙鐵人賽&lt;/a>文章補完計劃，&lt;a href="https://eandev.com/post/series/build-automated-deploy/build-ci-cd-from-scratch/#container">從零開始建立自動化發佈的流水線&lt;/a> Container 篇&lt;/p>
&lt;/blockquote>
&lt;p>當系統需要重新建置後，會發現建置的過程與步驟煩雜，甚至每次安裝都會發生不同的問題，不管使用虛擬機或是實體機。&lt;/p>
&lt;p>此時，可以視實際情況，考慮使用 Container 的技術，減少環境建置的複雜性與成本。&lt;/p></description></item></channel></rss>