<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>系列文章 on 伊恩的開發狂想</title><link>https://eandev.com/categories/%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0/</link><description>Recent content in 系列文章 on 伊恩的開發狂想</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sat, 11 Nov 2023 14:28:57 +0800</lastBuildDate><atom:link href="https://eandev.com/categories/%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker | 縮網址服務實作記錄 (1) - 基於 Docker 容器技術的網站服務架構實踐</title><link>https://eandev.com/post/series/side-project/shorten-1-build-service-base-on-container/</link><pubDate>Sat, 11 Nov 2023 14:28:57 +0800</pubDate><guid>https://eandev.com/post/series/side-project/shorten-1-build-service-base-on-container/</guid><description>縮網址服務為 http://url-ins.com/shorten/ ，有任何想法或回饋，可以在 SurveyCake 留下寶貴的意見。(為了維持主機的維運，在頁面內放入 Google Adsense 廣告。)
🔖 長話短說 🔖
設定 Ubuntu 允許 SSH 使用密碼登入時，除了 /etc/ssh/sshd_config 需要調整，也要檢查 Include 其他的 .conf 是否有覆寫的情況。
使用技術、框架與環境設定如下
網路服務商 Domain: Godaddy 主機平台: Digital Ocean 版控與 Container Registry: GitLab 使用服務: Nginx 1.25.3 Postgresql 16 Grafana 10.2 Loki 2.9.2 使用技術 Vue3 / Astro 3.3 .NET 7 使用相關線上工具
NGINXConfig: Digital Ocean 提供的 Nginx conf 的產生器，可直接使用介面點選後，自動產生對應的 Nginx config。 一、服務環境評估、選擇與服務架構規劃 評估與規劃的先決條件 在初期，維運成本的支出，要盡可能的低。 使用 Docker 進行服務的佈署與管理。 服務只對外開放 80/443 PORT，以及 SSH 22 PORT。 集中收集與分析服務維運時的 LOG。 在維運成本的考量下，初期使用一台主機來建置整個服務系統，並基於 Container 進行佈署與維運。</description></item><item><title>靈活運用 Docker - 打造高效的容器化應用環境</title><link>https://eandev.com/post/container/flexible-opereate-docker-foreword/</link><pubDate>Wed, 28 Jun 2023 09:44:39 +0800</pubDate><guid>https://eandev.com/post/container/flexible-opereate-docker-foreword/</guid><description>&lt;p>目前有許多文章的內容，都包含部份的 Docker 操作指令。也因為如此，所有的 Docker 指令與說明散在各處，所以起心動念，整理完整的 Docker 操作與應用的系列文章。&lt;/p></description></item><item><title>從零開始建立自動化發佈的流水線(持續搬移中)</title><link>https://eandev.com/post/series/build-automated-deploy/build-ci-cd-from-scratch/</link><pubDate>Mon, 20 Jun 2022 14:58:08 +0800</pubDate><guid>https://eandev.com/post/series/build-automated-deploy/build-ci-cd-from-scratch/</guid><description>&lt;blockquote>
&lt;p>將 &lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/1906">2019 iT 邦幫忙鐵人賽&lt;/a> 的文章搬遷到此，同時有些內部可能已經過時，在搬移的過程中，會重新針對內容加以整併與補充。&lt;/p>
&lt;/blockquote>
&lt;p>以一位 SOHO 族從無到有、一步一步建立自己的 CI/CD 的故事。伴隨著故事的發展，逐一建構一條從版控到發佈的自動化作業，會逐一帶出四個階段的主題。&lt;/p>
&lt;ul>
&lt;li>程式碼版本控管&lt;/li>
&lt;li>CI/CD Server 的架設&lt;/li>
&lt;li>自動發佈最新版本的軟體&lt;/li>
&lt;li>Container&lt;/li>
&lt;/ul></description></item><item><title>持續優化程式碼品質(持續補完中)</title><link>https://eandev.com/post/series/coding-skill/foreword/</link><pubDate>Mon, 20 Jun 2022 06:12:48 +0000</pubDate><guid>https://eandev.com/post/series/coding-skill/foreword/</guid><description>&lt;blockquote>
&lt;p>當初參與 &lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/1430">2018 iT 邦幫忙鐵人賽&lt;/a>，挑戰三十天連續不間斷發文失敗。將當初的文章搬遷到此，同時對文章內容，進行整理與補完欠缺的內容。&lt;/p>
&lt;/blockquote>
&lt;p>在持續開發軟體的生涯中，經手或協同開發的過程中。常常發現各種小問題累積，最後導致軟體的維護，變成如同惡夢的地獄，其實只要在開發中間，利用一些技巧，就可以程式碼更容易閱讀與維護。&lt;/p></description></item><item><title>從零開始土炮 MQ (持續更新中)</title><link>https://eandev.com/post/series/message-queue/foreword/</link><pubDate>Tue, 14 Jun 2022 07:12:18 +0000</pubDate><guid>https://eandev.com/post/series/message-queue/foreword/</guid><description>&lt;blockquote>
&lt;p>將原本參與 &lt;a href="https://ithelp.ithome.com.tw/users/20107551/ironman/2172">第 11 屆(2020) iThome 鐵人賽&lt;/a> 的文章，再加以整理與補充。&lt;/p>
&lt;/blockquote>
&lt;p>近幾年參與開發的軟體之中，大量使用到佇列(Queue)的技術與觀念。從同步與非同步存取 Queue；利用 Queue 與 Dispatch 組合，進行備援處理的機制；大量資料的接收與轉發等等。另一方面，微服務與服務解耦的議題，訊息佇列（Message Queue）的使用頻率也逐年提升。&lt;/p>
&lt;p>以傻子的精神，土幹一個 Message Queue，利用這個過程，好好的深入了解 Message Queue 的概念。&lt;/p></description></item></channel></rss>