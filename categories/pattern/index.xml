<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pattern on 伊恩的開發狂想</title><link>https://eandev.com/categories/pattern/</link><description>Recent content in Pattern on 伊恩的開發狂想</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Thu, 02 Feb 2023 15:58:59 +0800</lastBuildDate><atom:link href="https://eandev.com/categories/pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>淺談 Pattern | 生產者與消費者模型</title><link>https://eandev.com/post/pattern/producer-consumers/</link><pubDate>Thu, 02 Feb 2023 15:58:59 +0800</pubDate><guid>https://eandev.com/post/pattern/producer-consumers/</guid><description>&lt;p>佇列常見用於生產者與消費者模型之中，作為兩者之間的緩沖區。將雙方的直接關係進行解耦，並減少雙方效率不均的問題。&lt;/p>
&lt;p>而在併發的架構下，必須使用鎖定機制與同步機制，確保佇列中的之資源被正確的存取，避免重覆使用或錯誤覆寫的情況。&lt;/p></description></item></channel></rss>