---
import { getCollection } from "astro:content";
import GeneralLayout from "../../layouts/GeneralLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  // 獲取所有類別
  const categories = [
    ...new Set(
      posts.map((p) => p.data.categories?.map((c) => c.toLowerCase())).flat()
    ),
  ];

  return categories
    .map((category) => {
      const filteredPosts = posts.filter((post) =>
        post.data.categories
          ?.map((c) => c.toLowerCase())
          .includes(category || "")
      );

      return filteredPosts.map((post) => {
        return {
          params: {
            category: category,
            slug: post.slug,
          },
        };
      });
    })
    .flat();
}

const { category } = Astro.params;

const posts = await getCollection("blog");
const filteredPosts = posts
  .filter((post) => {
    return post.data.categories
      ?.map((c) => c.toLowerCase())
      .includes(category || "");
  })
  .sort((a, b) => Number(b.data.date) - Number(a.data.date));
---

<GeneralLayout>
  <article class="prose lg:prose-xl md:prose-sm">
    <h4>Category: {category}</h4>
    <ul>
      {
        filteredPosts.map((post) => {
          const path = post.id.slice(0, post.id.lastIndexOf("/")).toLowerCase();

          return (
            <li>
              <span class="createDate">
                <FormattedDate date={post.data.date} />
              </span>
              <a href={`/post/${path}/`}>
                <span class="title">{ post.data.title }</span>
              </a>
            </li>
          );
        })
      }
    </ul>
  </article>
</GeneralLayout>

<style>
  a {
    text-decoration: none;
  }

  .createDate {
    display: inline-block;
    font-size: .9rem;
    text-align: right;
    margin-right: 10px;
  }

  li {
    margin-top: 5px;
    margin-bottom: 3px;
  }
</style>
