---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Categories from "../../components/widget/categories.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  // 獲取所有類別並轉換為小寫
  const categories = [
    ...new Set(
      posts
        .map((p) => p.data.categories?.map((c) => c.toLowerCase()))
        .filter((c) => c)
        .flat()
    ),
  ];

  return categories.map((category) => {
    return {
      params: {
        category: category,
      },
    };
  });
}

const { category } = Astro.params;

// 獲取所有文章並按日期排序
const allPosts = await getCollection("blog");
const filteredPosts = allPosts
  .filter((post) => {
    return post.data.categories
      ?.map((c) => c.toLowerCase())
      .includes(category || "");
  })
  .sort((a, b) => Number(b.data.date) - Number(a.data.date));

// 獲取分類計數
const categoryCount = filteredPosts.length;

// 格式化分類名稱（首字母大寫）
const formattedCategory = category ? category.charAt(0).toUpperCase() + category.slice(1) : "";

// 頁面標題
const pageTitle = `${formattedCategory} (${categoryCount})`;

// 根據分類設置主題色
let accentColor = "#4299e1"; // 默認藍色
switch(category) {
  case "software":
    accentColor = "#4299e1"; // 藍色
    break;
  case "management":
    accentColor = "#38a169"; // 綠色
    break;
  case "reading":
    accentColor = "#ed8936"; // 橙色
    break;
  case "growth":
    accentColor = "#9f7aea"; // 紫色
    break;
  default:
    accentColor = "#4299e1"; // 默認藍色
}
---

<!doctype html>
<html lang="zh-TW">
  <head>
    <BaseHead title={pageTitle + " - " + SITE_TITLE} description={SITE_DESCRIPTION} noindex={true} />
  </head>
  <body>
    <Header />
    
    <div class="category-container">
      <div class="main-content">
        <div class="sidebar-area">
          <div class="widget-container">
            <Categories posts={allPosts} />
          </div>
        </div>
        
        <div class="content-area">
          <div class="page-header">
            <div class="title-section">
              <h1>{formattedCategory}</h1>
              <div class="article-count">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14 2z"/>
                  <polyline points="14,2 14,8 20,8"/>
                </svg>
                共 {categoryCount} 篇文章
              </div>
            </div>
            <p>這個分類下的所有文章都與「{formattedCategory}」相關。探索更多相關內容！</p>
          </div>
          
          <div class="posts-list">
            {filteredPosts.length > 0 ? (
              filteredPosts.map((post) => {
                const path = post.id.slice(0, post.id.lastIndexOf("/")).toLowerCase();
                return (
                  <article class="post-card">
                    <div class="post-content">
                      <div class="post-meta-row">
                        <time class="post-date" datetime={post.data.date.toISOString()}>
                          {new Date(post.data.date).toLocaleDateString('zh-TW', {
                            year: 'numeric',
                            month: 'short',
                            day: 'numeric',
                          })}
                        </time>
                        {post.data.tags && post.data.tags.length > 0 && (
                          <div class="post-tags">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"/><path d="M7 7h.01"/></svg>
                            <span class="tag-list">
                              {post.data.tags?.slice(0, 3).map((tag, index) => (
                                <>
                                  <a href={`/tags/${tag.toLowerCase()}/`} class="tag-link">{tag}</a>
                                  {index < Math.min(post.data.tags.length, 3) - 1 && ", "}
                                </>
                              ))}
                              {post.data.tags.length > 3 && <span>...</span>}
                            </span>
                          </div>
                        )}
                      </div>
                      <h3 class="post-title">
                        <a href={`/post/${path}/`}>{post.data.title}</a>
                      </h3>
                      {post.data.description && (
                        <p class="post-description">
                          {post.data.description}
                        </p>
                      )}
                      <a href={`/post/${path}/`} class="read-more">
                        閱讀更多
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12h14"/><path d="m12 5 7 7-7 7"/></svg>
                      </a>
                    </div>
                  </article>
                );
              })
            ) : (
              <div class="no-posts">
                <p>這個分類下還沒有文章。</p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
    
    <Footer />
  </body>
</html>

<style define:vars={{ accentColor }}>
  body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .category-container {
    width: 100%;
    max-width: 100%;
    margin: 0 auto;
    flex: 1;
  }
  
  .main-content {
    display: grid;
    grid-template-columns: 300px minmax(0, 1fr);
    gap: 2rem;
    margin: 2rem 0 3rem;
    max-width: 1120px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  .sidebar-area {
    width: 300px;
  }
  
  .widget-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  
  .content-area {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
  }
  
  .page-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eaeaea;
  }
  
  .title-section {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }
  
  .page-header h1 {
    font-size: 2rem;
    font-weight: 700;
    margin: 0;
    color: var(--accentColor);
  }
  
  .article-count {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.875rem;
    color: #666;
    background-color: rgba(var(--accent-rgb), 0.1);
    padding: 0.25rem 0.5rem;
    border-radius: 8px;
    font-weight: 500;
  }
  
  .article-count svg {
    color: var(--accentColor);
  }
  
  .page-header p {
    font-size: 1rem;
    color: #666;
    margin: 0;
  }
  
  .posts-list {
    width: 100%;
    margin-bottom: 2rem;
  }
  
  .post-card {
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.3s ease;
    margin-bottom: 1.5rem;
  }
  
  .post-content {
    padding: 1rem 1.5rem;
  }
  
  .post-meta-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px dashed #e2e8f0;
  }
  
  .post-date {
    font-size: 0.875rem;
    color: #718096;
  }
  
  .post-tags {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .post-tags svg {
    color: var(--accentColor);
  }
  
  .tag-list {
    font-size: 0.8rem;
  }
  
  .tag-link {
    color: #4682b4;
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .tag-link:hover {
    color: var(--accentColor);
  }
  
  .post-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 0.75rem 0;
  }
  
  .post-title a {
    color: #333;
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .post-title a:hover {
    color: var(--accentColor);
  }
  
  .post-description {
    font-size: 0.95rem;
    color: #555;
    margin-bottom: 1rem;
    line-height: 1.5;
  }
  
  .read-more {
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;
    font-size: 0.9rem;
    color: var(--accentColor);
    text-decoration: none;
    font-weight: 500;
  }
  
  .read-more:hover {
    opacity: 0.8;
  }
  
  .no-posts {
    padding: 2rem;
    text-align: center;
    color: #666;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
  
  @media (max-width: 1200px) {
    .main-content {
      gap: 1.5rem;
    }
  }
  
  @media (max-width: 992px) {
    .main-content {
      grid-template-columns: 1fr;
    }
    
    .sidebar-area {
      width: 100%;
      margin-bottom: 2rem;
    }
    
    .title-section {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>