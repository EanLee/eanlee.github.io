---
import { getCollection } from "astro:content";
import GeneralLayout from "../../layouts/GeneralLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  // 獲取所有類別並轉換為小寫
  const categories = [
    ...new Set(
      posts
        .map((p) => p.data.categories?.map((c) => c.toLowerCase()))
        .filter((c) => c)
        .flat()
    ),
  ];

  return categories.map((category) => {
    return {
      params: {
        category: category,
      },
    };
  });
}

const { category } = Astro.params;

// 獲取所有文章並按日期排序
const allPosts = await getCollection("blog");
const filteredPosts = allPosts
  .filter((post) => {
    return post.data.categories
      ?.map((c) => c.toLowerCase())
      .includes(category || "");
  })
  .sort((a, b) => Number(b.data.date) - Number(a.data.date));

// 獲取分類計數
const categoryCount = filteredPosts.length;

// 格式化分類名稱（首字母大寫）
const formattedCategory = category ? category.charAt(0).toUpperCase() + category.slice(1) : "";

// 頁面標題
const pageTitle = `${formattedCategory} (${categoryCount})`;
---

<GeneralLayout title={pageTitle}>
  <div class="category-container">
    <header class="category-header">
      <div class="category-title-wrapper">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-folder"><path d="M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"/></svg>
        <h1 class="category-title">{formattedCategory}</h1>
      </div>
      <div class="category-meta">
        <span class="post-count">{categoryCount} 篇文章</span>
      </div>
    </header>

    <div class="category-description">
      <p>這個分類下的所有文章都與「{formattedCategory}」相關。探索更多相關內容！</p>
    </div>

    <div class="posts-list">
      {
        filteredPosts.map((post) => {
          const path = post.id.slice(0, post.id.lastIndexOf("/")).toLowerCase();
          return (
            <article class="post-item">
              <div class="post-meta">
                <div class="post-date">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar"><rect width="18" height="18" x="3" y="4" rx="2" ry="2"/><line x1="16" x2="16" y1="2" y2="6"/><line x1="8" x2="8" y1="2" y2="6"/><line x1="3" x2="21" y1="10" y2="10"/></svg>
                  <FormattedDate date={post.data.date} />
                </div>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="post-tags">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-tag"><path d="M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"/><path d="M7 7h.01"/></svg>
                    {post.data.tags.slice(0, 3).map((tag, index) => (
                      <a href={`/tags/${tag.toLowerCase()}/`} class="tag-link">
                        {tag}{index < Math.min(post.data.tags.length, 3) - 1 ? ", " : ""}
                      </a>
                    ))}
                    {post.data.tags.length > 3 && <span>...</span>}
                  </div>
                )}
              </div>
              <h2 class="post-title">
                <a href={`/post/${path}/`}>{post.data.title}</a>
              </h2>
              {post.data.description && (
                <p class="post-excerpt">{post.data.description.length > 120 
                  ? post.data.description.substring(0, 120) + '...' 
                  : post.data.description}
                </p>
              )}
            </article>
          );
        })
      }
    </div>

    {filteredPosts.length === 0 && (
      <div class="no-posts">
        <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-file-question"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2"/><path d="M12 17h.01"/></svg>
        <p>這個分類下還沒有文章。</p>
      </div>
    )}

    <div class="back-link">
      <a href="/categories/">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-left"><path d="m12 19-7-7 7-7"/><path d="M19 12H5"/></svg>
        所有分類
      </a>
    </div>
  </div>
</GeneralLayout>

<style>
  .category-container {
    max-width: 900px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .category-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color, #eaeaea);
  }

  .category-title-wrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .category-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--title-color, #333);
    margin: 0;
  }

  .category-meta {
    font-size: 1rem;
    color: var(--meta-color, #666);
    background-color: var(--tag-bg, #f0f0f0);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
  }

  .category-description {
    margin-bottom: 2rem;
    font-size: 1.1rem;
    color: var(--text-color, #555);
    line-height: 1.6;
  }

  .posts-list {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .post-item {
    padding: 1.5rem;
    border-radius: 8px;
    background-color: var(--card-bg, #fff);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    transition: box-shadow 0.2s ease;
  }

  .post-item:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.8rem;
    font-size: 0.9rem;
    color: var(--meta-color, #666);
  }

  .post-date {
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }

  .post-tags {
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }

  .tag-link {
    color: var(--meta-color, #666);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .tag-link:hover {
    color: var(--link-color, #0077cc);
  }

  .post-title {
    font-size: 1.4rem;
    font-weight: 600;
    margin: 0 0 0.8rem 0;
    line-height: 1.3;
  }

  .post-title a {
    color: var(--title-color, #333);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .post-title a:hover {
    color: var(--link-color, #0077cc);
  }

  .post-excerpt {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--text-color, #555);
    margin: 0;
  }

  .no-posts {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem;
    background-color: var(--card-bg, #f9f9f9);
    border-radius: 8px;
    text-align: center;
    color: var(--meta-color, #666);
  }

  .no-posts svg {
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .no-posts p {
    font-size: 1.2rem;
    margin: 0;
  }

  .back-link {
    margin-top: 2rem;
    text-align: center;
  }

  .back-link a {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background-color: var(--card-bg, #f9f9f9);
    border-radius: 4px;
    color: var(--link-color, #0077cc);
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .back-link a:hover {
    background-color: var(--link-color, #0077cc);
    color: white;
  }

  @media (max-width: 768px) {
    .category-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .post-tags {
      margin-left: 0;
    }
  }
</style>
