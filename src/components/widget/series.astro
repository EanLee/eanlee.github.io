---
import { getCollection } from "astro:content";
import WidgetBase from "./WidgetBase.astro";

// 獲取所有文章
const posts = await getCollection("blog");

interface seriesModel {
  id: string;
  series: string;
}

// 提取標籤
const series: seriesModel[] = posts
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .filter((p) => p.data.series)
  .map((p) => {
    // 使用與 series/[...slug].astro 相同的邏輯
    const seriesPath = p.id
      .slice(p.id.indexOf("/") + 1, p.id.lastIndexOf(p.slug) - 1)
      .toLowerCase();
    
    return {
      id: seriesPath,
      series: p.data.series ? p.data.series.toLowerCase() : "",
    };
  })
  .filter((p) => p.series) // 篩選出有標籤的文章
  .reduce((acc, cur) => {
    if (!acc.find((s) => s.id === cur.id)) {
      acc.push(cur);
    }
    return acc;
  }, [] as seriesModel[]);

interface Count {
  [series: string]: number;
}
// 統計數量
const statistic = posts
  .filter((p) => p.data.series)
  .map((s) => (s.data.series ? s.data.series.toLowerCase() : ""))
  .reduce((acc: Count, series) => {
    if (!acc[series]) {
      acc[series] = 0;
    }
    acc[series]++;
    return acc;
  }, {});

---

<WidgetBase topic="Series">
  <ul>
    {
      series.map((s) => (
        <li>
          <a class="tag" href={`/series/${s.id}`}>
            {s.series.toUpperCase()} ({statistic[s.series]})
          </a>
        </li>
      ))
    }
  </ul>
</WidgetBase>

<style>
  ul {
    list-style: none;

    display: block;
    font-size: 0.9rem;
    padding: 5px 0;
    border-bottom: 1px dotted #ebebeb;
  }

  li {
    margin: 5px 0;
  }

  ul a {
    text-decoration: none;
    color: var(--text-color);
  }
</style>
