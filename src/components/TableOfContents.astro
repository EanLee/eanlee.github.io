---
// 側邊目錄組件 - 自動根據文章內容生成目錄
---

<!-- 目錄容器 -->
<div class="toc-container" id="toc-container">
  <div class="toc-header">
    <span>目錄</span>
    <button id="toc-close" class="toc-toggle" aria-label="關閉目錄">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  </div>
  <div class="toc-content" id="toc-content">
    <!-- 目錄內容將由 JavaScript 動態生成 -->
  </div>
</div>

<!-- 固定位置的開啟按鈕 -->
<button id="toc-open" class="toc-toggle toc-toggle-fixed" aria-label="開啟目錄">
  <span class="button-text">目錄</span>

</button>

<script>
  // 在頁面加載完成後執行
  document.addEventListener('DOMContentLoaded', () => {
    console.log('目錄功能初始化開始'); // 偵錯用
    
    // 獲取文章內容區域
    const articleContent = document.querySelector('.article-content');
    if (!articleContent) {
      console.log('找不到文章內容區域'); // 偵錯用
      return;
    }
    
    // 獲取所有標題元素 (h2, h3, h4)
    const headings = articleContent.querySelectorAll('h2, h3, h4');
    console.log(`找到 ${headings.length} 個標題`); // 偵錯用
    
    if (headings.length === 0) {
      document.querySelector('.toc-container').style.display = 'none';
      document.querySelector('.toc-toggle-fixed').style.display = 'none';
      console.log('沒有標題，隱藏目錄'); // 偵錯用
      return;
    }
    
    // 獲取目錄容器和按鈕
    const tocContainer = document.getElementById('toc-container');
    const tocContent = document.getElementById('toc-content');
    const tocClose = document.getElementById('toc-close');
    const tocOpen = document.getElementById('toc-open');
    
    if (!tocContainer || !tocContent || !tocClose || !tocOpen) {
      console.log('找不到目錄元素'); // 偵錯用
      return;
    }

    // 建立目錄結構
    console.log('開始建立目錄結構'); // 偵錯用
    const tocStructure = createNestedTOC(headings);
    tocContent.appendChild(tocStructure);
    
    // 初始狀態設定 - 目錄預設顯示
    if (window.innerWidth > 1024) {
      tocContainer.classList.add('open');
      tocContainer.style.visibility = 'visible';
      tocContainer.style.opacity = '1';
      tocOpen.style.display = 'none';
    } else {
      tocContainer.classList.remove('open');
      tocContainer.style.visibility = 'hidden';
      tocContainer.style.opacity = '0';
      tocOpen.style.display = 'block';
    }
    
    // 處理開啟目錄按鈕點擊
    tocOpen.addEventListener('click', () => {
      console.log('開啟目錄'); // 偵錯用
      tocContainer.classList.add('open');
      tocContainer.style.visibility = 'visible';
      tocContainer.style.opacity = '1';
      tocOpen.style.display = 'none';
    });
    
    // 處理關閉目錄按鈕點擊
    tocClose.addEventListener('click', () => {
      console.log('關閉目錄'); // 偵錯用
      tocContainer.classList.remove('open');
      tocContainer.style.visibility = 'hidden';
      tocContainer.style.opacity = '0';
      setTimeout(() => {
        tocOpen.style.display = 'block';
      }, 300); // 與轉場效果時間同步
    });
    
    // 監控滾動事件，確保只在滾動到內文才顯示目錄按鈕
    const firstHeading = headings[0];
    if (firstHeading) {
      const showTocAtPosition = firstHeading.offsetTop - 150;
      console.log(`目錄顯示位置: ${showTocAtPosition}`); // 偵錯用
      
      const toggleTocVisibility = throttle(() => {
        if (window.scrollY > showTocAtPosition) {
          // 顯示目錄按鈕
          tocOpen.style.visibility = 'visible';
          tocOpen.style.opacity = '1';
        } else {
          // 隱藏目錄按鈕
          tocOpen.style.visibility = 'hidden';
          tocOpen.style.opacity = '0';
          
          // 同時關閉已開啟的目錄
          if (tocContainer.classList.contains('open')) {
            tocContainer.classList.remove('open');
            tocContainer.style.visibility = 'hidden';
            tocContainer.style.opacity = '0';
          }
        }
        
        // 更新當前活躍標題
        updateActiveHeading(headings);
      }, 100);
      
      // 初始檢查
      toggleTocVisibility(); 
      window.addEventListener('scroll', toggleTocVisibility);
    }
    
    console.log('目錄功能初始化完成'); // 偵錯用
  });
  
  // 更新當前活躍標題
  function updateActiveHeading(headings) {
    // 儲存所有目錄項鏈接
    const tocLinks = document.querySelectorAll('.toc-content a');
    if (tocLinks.length === 0) return;
    
    // 找出當前可見的標題
    let currentHeadingId = null;
    let closestHeading = null;
    let closestDistance = Infinity;
    
    // 計算視窗中間點位置
    const windowMiddle = window.scrollY + window.innerHeight / 3;
    
    // 尋找最接近視窗中間的標題
    headings.forEach(heading => {
      const distance = Math.abs(heading.getBoundingClientRect().top + window.scrollY - windowMiddle);
      
      if (distance < closestDistance && heading.getBoundingClientRect().top <= window.innerHeight / 2) {
        closestDistance = distance;
        closestHeading = heading;
      }
    });
    
    if (closestHeading) {
      currentHeadingId = closestHeading.id;
    }
    
    // 移除所有活躍標記
    tocLinks.forEach(link => {
      link.classList.remove('active', 'parent-active');
    });
    
    // 如果找到當前標題，設置其與父標題為活躍
    if (currentHeadingId) {
      const activeLink = document.querySelector(`.toc-content a[href="#${currentHeadingId}"]`);
      if (activeLink) {
        activeLink.classList.add('active');
        
        // 為父層級添加父活躍標記
        let parent = activeLink.parentElement;
        while (parent && !parent.classList.contains('main-list')) {
          if (parent.parentElement && parent.parentElement.previousElementSibling) {
            const parentLink = parent.parentElement.previousElementSibling.querySelector('a');
            if (parentLink) {
              parentLink.classList.add('parent-active');
            }
          }
          parent = parent.parentElement;
        }
      }
    }
  }
  
  // 創建嵌套結構的目錄，更好地表現層級關係
  function createNestedTOC(headings) {
    const mainList = document.createElement('ul');
    mainList.className = 'toc-list main-list';

    // 用於跟踪當前的父容器
    let currentH2List = mainList;
    let currentH3List = null;

    headings.forEach((heading, index) => {
      // 為每個標題添加 ID (如果沒有)
      if (!heading.id) {
        heading.id = `heading-${index}`;
      }

      const listItem = document.createElement('li');
      listItem.className = `toc-item ${heading.tagName.toLowerCase()}`;
      listItem.setAttribute('role', 'listitem');

      const link = document.createElement('a');
      link.href = `#${heading.id}`;
      link.textContent = heading.textContent;
      link.setAttribute('role', 'link');

      // 點擊目錄項時在移動設備上關閉目錄
      link.addEventListener('click', () => {
        if (window.innerWidth <= 1024) {
          document.getElementById('toc-container').classList.remove('open');
        }
      });

      listItem.appendChild(link);

      // 根據標題層級調整結構
      if (heading.tagName === 'H2') {
        mainList.appendChild(listItem);

        // 為 h2 創建一個新的子列表容器（為後續的 h3 準備）
        const subList = document.createElement('ul');
        subList.className = 'toc-list h3-list';
        listItem.appendChild(subList);

        // 更新當前的 h2 子列表引用
        currentH2List = subList;
        // 重置 h3 引用
        currentH3List = null;
        
      } else if (heading.tagName === 'H3') {
        // 如果是 h3，添加到當前的 h2 子列表中
        currentH2List.appendChild(listItem);

        // 為 h3 創建一個子列表（為後續的 h4 準備）
        const subList = document.createElement('ul');
        subList.className = 'toc-list h4-list';
        listItem.appendChild(subList);

        // 更新當前的 h3 子列表引用
        currentH3List = subList;
        
      } else if (heading.tagName === 'H4') {
        // 如果是 h4 且存在 h3 父級，則添加到 h3 的子列表
        if (currentH3List) {
          currentH3List.appendChild(listItem);
        } else {
          // 如果沒有 h3 父級，則直接添加到 h2 的子列表
          currentH2List.appendChild(listItem);
        }
      }
    });
    
    return mainList;
  }
  
  // 新增節流函式以優化效能
  function throttle(func, limit) {
    let lastFunc;
    let lastRan;
    return function () {
      const context = this;
      const args = arguments;
      if (!lastRan) {
        func.apply(context, args);
        lastRan = Date.now();
      } else {
        clearTimeout(lastFunc);
        lastFunc = setTimeout(function () {
          if (Date.now() - lastRan >= limit) {
            func.apply(context, args);
            lastRan = Date.now();
          }
        }, limit - (Date.now() - lastRan));
      }
    };
  }
</script>

<style>
  .toc-content {
    padding-right: 5px;
    margin-top: 10px;
    font-size: 0.9em;
  }

  /* 修正目錄主容器的顯示問題 */
  .toc-container {
    position: fixed;
    right: 5px;
    top: 80px;
    width: 260px;
    max-height: calc(100vh - 200px);
    overflow-y: auto;
    background-color: rgba(245, 245, 245, 0.75); /* 降低不透明度 */
    border-radius: 8px;
    padding: 1em;
    border-left: 3px solid rgba(var(--gray), 0.4); /* 降低邊框明顯度 */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03); /* 減輕陰影 */
    transition: transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease;
    z-index: 90;
    transform: translateX(100%);
    opacity: 0;
    visibility: hidden;
  }

  /* 當目錄開啟時才顯示目錄內容 */
  .toc-container.open {
    transform: translateX(0);
    opacity: 1;
    visibility: visible;
  }

  /* 移除原本部分顯示的樣式 */
  .toc-container:not(.open) {
    transform: translateX(100%);
  }

  .toc-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }

  /* 目錄按鈕樣式 */
  .toc-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
    background: rgba(245, 245, 245, 0.9);
    color: rgba(0, 0, 0, 0.7);
    border: none;
    border-radius: 4px;
    padding: 5px 10px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .toc-toggle:hover {
    color: rgba(var(--accent-rgb), 0.8);
    background-color: rgba(245, 245, 245, 1);
  }
  
  .toc-toggle .button-text {
    font-size: 0.85rem;
    font-weight: 500;
  }

  /* 隱藏目錄時的按鈕 (固定位置) */
  .toc-toggle-fixed {
    position: fixed;
    right: 20px;
    top: 80px;
    z-index: 98;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    visibility: hidden;
    opacity: 0;
    transition: visibility 0.3s, opacity 0.3s;
    display: flex;
    align-items: center;
    padding: 8px 12px;
  }
  
  /* 顯示目錄時的按鈕 (在目錄內) */
  .toc-container.open .toc-toggle-fixed {
    display: none;
  }

  /* 目錄開關效果 */
  .toc-container.open .toc-toggle {
    transform: rotate(0); /* 重設旋轉，因為我們現在有明確的文字 */
  }
  
  /* 確保在小螢幕上按鈕更明顯 */
  @media (max-width: 768px) {
    .toc-toggle-fixed {
      right: 10px;
      padding: 6px 10px;
    }
    
    .toc-toggle .button-text {
      font-size: 0.8rem;
    }
  }
  
  /* 目錄列表的基本樣式 */
  .toc-list {
    list-style-type: none;
    padding-left: 0;
    margin: 0;
  }
  
  /* 主列表（包含 H2 項目） */
  .main-list {
    margin-bottom: 0;
  }
  
  /* H2 子列表（包含 H3） */
  .h3-list {
    margin-top: 0.2em;
    margin-bottom: 0.4em;
    padding-left: 1.2em; /* 增加內縮 */
    border-left: 1px solid rgba(var(--gray), 0.3);
  }
  
  /* H3 子列表（包含 H4） */
  .h4-list {
    margin-top: 0.2em;
    margin-bottom: 0.3em;
    padding-left: 1.2em; /* 增加內縮 */
    border-left: 1px solid rgba(var(--gray), 0.2);
  }
  
  /* 各級項目的基本樣式 */
  .toc-item {
    position: relative;
    line-height: 1.3;
  }
  
  /* 標題層級樣式 */
  .toc-item.h2 {
    font-size: 0.9em;
    font-weight: 600;
    margin-top: 1em;
    margin-bottom: 0.4em;
    padding-left: 0;
    border-left: none;
  }
  
  .toc-item.h2:first-child {
    margin-top: 0;
  }
  
  .toc-item.h3 {
    font-size: 0.85em;
    font-weight: normal;
    color: rgba(var(--gray-dark), 0.75);
    margin-top: 0.3em;
    margin-bottom: 0.3em;
    padding-left: 0.8em;
    border-left: 1px solid rgba(var(--gray), 0.2);
  }
  
  .toc-item.h4 {
    font-size: 0.8em;
    font-weight: normal;
    color: rgba(var(--gray-dark), 0.65);
    margin-top: 0.2em;
    margin-bottom: 0.2em;
    padding-left: 1.5em;
    border-left: 1px solid rgba(var(--gray), 0.15);
  }
  
  /* 移除之前的指示器樣式 */
  .toc-item.h2::before,
  .toc-item.h3::before,
  .toc-item.h4::before {
    display: none;
  }
  
  /* 更低調的鏈接樣式 */
  .toc-content a {
    text-decoration: none;
    color: rgba(var(--gray-dark), 0.55);
    display: block;
    transition: color 0.2s, padding-left 0.2s;
    padding: 3px 5px;
    border-radius: 3px;
    line-height: 1.4;
  }
  
  .toc-content a:hover {
    color: rgba(var(--accent-rgb), 0.75);
    background-color: rgba(var(--accent-rgb), 0.04);
    padding-left: 7px;
  }
  
  /* 當前活躍項目樣式 - 更低調 */
  .toc-content a.active {
    color: rgba(var(--accent-rgb), 0.8);
    font-weight: normal;
    background-color: rgba(var(--accent-rgb), 0.05);
    border-left: 2px solid rgba(var(--accent-rgb), 0.3);
  }
  
  /* 父層級活躍樣式 - 更低調 */
  .toc-content a.parent-active {
    color: rgba(var(--accent-rgb), 0.7);
    background-color: rgba(var(--accent-rgb), 0.02);
  }
  
  /* 小螢幕適配 */
  @media (max-width: 768px) {
    .toc-container {
      width: 180px;
      right: 5px;
    }
    
    .toc-item.h3 {
      padding-left: 0.6em;
    }
    
    .toc-item.h4 {
      padding-left: 1.2em;
    }
    
    .toc-content a {
      padding: 2px 3px;
    }
  }
</style>