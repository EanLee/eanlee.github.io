---
import type { CollectionEntry } from 'astro:content';

interface Props {
  allPosts: CollectionEntry<'blog'>[];
}

const { allPosts } = Astro.props;

// 定義分類信息
const categories = [
  {
    id: "software",
    name: "軟體開發",
    description: "程式設計、系統架構、技術分享",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m18 16 4-4-4-4"/><path d="m6 8-4 4 4 4"/><path d="m14.5 4-5 16"/></svg>`,
    color: "#4299e1",
    link: "/software/"
  },
  {
    id: "management",
    name: "管理經驗",
    description: "團隊管理、專案管理、領導心得",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M22 21v-2a4 4 0 0 0-3-3.87"/><path d="M16 3.13a4 4 0 0 1 0 7.75"/></svg>`,
    color: "#38a169",
    link: "/management/"
  },
  {
    id: "reading",
    name: "閱讀心得",
    description: "書籍心得、知識筆記、學習分享",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"/><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"/></svg>`,
    color: "#ed8936",
    link: "/reading/"
  },
  {
    id: "growth",
    name: "個人成長",
    description: "自我提升、職涯發展、生活體悟",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 20h9"/><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"/></svg>`,
    color: "#9f7aea",
    link: "/growth/"
  }
];

// 計算每個分類的文章數量
const categoryStats = categories.map(category => {
  const count = allPosts.filter(post => {
    // 優先使用 epic 欄位
    if (post.data.epic) {
      return post.data.epic === category.id;
    } else {
      // 根據檔案路徑判斷分類
      const postPath = post.id.toLowerCase();
      
      // 路徑格式可能是 "software/article-name/index.md" 或類似格式
      // 檢查路徑是否以分類名稱開頭
      if (category.id === 'reading') {
        return false; // reading 目錄不存在
      }
      
      return postPath.startsWith(`${category.id}/`);
    }
  }).length;
  
  return { ...category, count };
});
---

<div class="category-grid">
  <div class="grid-header">
    <h2 class="grid-title">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect width="7" height="7" x="3" y="3" rx="1"/>
        <rect width="7" height="7" x="14" y="3" rx="1"/>
        <rect width="7" height="7" x="14" y="14" rx="1"/>
        <rect width="7" height="7" x="3" y="14" rx="1"/>
      </svg>
      文章分類
    </h2>
  </div>

  <div class="grid-content">
    {categoryStats.map((category) => (
      <a href={category.link} class="category-card" style={`--category-color: ${category.color}`}>
        <div class="category-icon" set:html={category.icon}></div>
        <div class="category-info">
          <h3 class="category-name">{category.name}</h3>
          <p class="category-description">{category.description}</p>
          <div class="category-stats">
            <span class="post-count">{category.count} 篇文章</span>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="arrow-icon">
              <path d="M5 12h14"/>
              <path d="m12 5 7 7-7 7"/>
            </svg>
          </div>
        </div>
      </a>
    ))}
  </div>
</div>

<style>
  .category-grid {
    margin-bottom: var(--spacing-2xl);
  }

  .grid-header {
    margin-bottom: var(--spacing-xl);
    padding-bottom: var(--spacing-md);
    border-bottom: 2px solid var(--border-primary);
  }

  .grid-title {
    font-size: 1.75rem;
    font-weight: 700;
    margin: 0;
    color: var(--text-primary);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .grid-title svg {
    color: var(--primary-500);
  }

  .grid-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--spacing-lg);
  }

  .category-card {
    background-color: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: var(--radius-lg);
    padding: var(--spacing-lg);
    text-decoration: none;
    color: inherit;
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
  }

  .category-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background-color: var(--category-color);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform var(--transition-normal);
  }

  .category-card:hover {
    box-shadow: var(--shadow-xl);
    transform: translateY(-4px);
    border-color: var(--category-color);
  }

  .category-card:hover::before {
    transform: scaleX(1);
  }

  .category-card:hover .category-icon {
    color: var(--category-color);
    transform: scale(1.1);
  }

  .category-card:hover .arrow-icon {
    transform: translateX(4px);
  }

  .category-icon {
    color: var(--text-muted);
    margin-bottom: var(--spacing-md);
    transition: all var(--transition-normal);
    display: block;
  }

  .category-info {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
  }

  .category-name {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: var(--text-primary);
  }

  .category-description {
    font-size: 0.9rem;
    color: var(--text-secondary);
    line-height: 1.5;
    margin: 0;
  }

  .category-stats {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: var(--spacing-sm);
    padding-top: var(--spacing-sm);
    border-top: 1px solid var(--border-muted);
  }

  .post-count {
    font-size: 0.85rem;
    font-weight: 500;
    color: var(--category-color);
  }

  .arrow-icon {
    color: var(--text-muted);
    transition: all var(--transition-normal);
  }

  @media (max-width: 768px) {
    .grid-content {
      grid-template-columns: 1fr;
      gap: var(--spacing-md);
    }

    .grid-title {
      font-size: 1.5rem;
    }

    .category-card {
      padding: var(--spacing-md);
    }
  }

  @media (max-width: 480px) {
    .grid-content {
      gap: var(--spacing-sm);
    }

    .category-name {
      font-size: 1.1rem;
    }

    .category-description {
      font-size: 0.85rem;
    }
  }
</style>