<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ASP.NET on 伊恩的開發狂想</title><link>https://eandev.com/tags/asp.net/</link><description>Recent content in ASP.NET on 伊恩的開發狂想</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Wed, 22 Nov 2023 14:54:54 +0800</lastBuildDate><atom:link href="https://eandev.com/tags/asp.net/index.xml" rel="self" type="application/rss+xml"/><item><title>ASP.NET Core | 問題排除隨手記 - UseHttpsRedirection 造成的無限 Redirection (Response Http Status 307)</title><link>https://eandev.com/post/troubleshooting/use-https-redirection-cause-infinite-redirection/</link><pubDate>Wed, 22 Nov 2023 14:54:54 +0800</pubDate><guid>https://eandev.com/post/troubleshooting/use-https-redirection-cause-infinite-redirection/</guid><description>&lt;blockquote>
&lt;p>🔖 長話短說 🔖
在 Reverse Proxy 與 Web API 的架構，若發生無限重定向的問題。請確認 Reverse Proxy 是否固定使用 HTTP 導向 Web API；或 Web API 強制將 HTTP 重定向到 HTTPS。&lt;/p>
&lt;/blockquote>
&lt;p>最近把使用 ASP.NET Core 寫的 Web API 掛到有反向代理(Reverse Proxy) 的系統架構。&lt;/p>
&lt;p>明明 API 就只有單純的回傳資訊，但卻出現在瀏覽器出現 &lt;code>ERR_TOO_MANY_REDIRECTS&lt;/code> 、Postman 出現 &lt;code>Error: Exceeded maxRedirects. Probably stuck in a redirect loop&lt;/code>、或是 Insomnia 出現 &lt;code>Error: Number of redirects hit maximum amount&lt;/code> 的錯誤訊息。&lt;/p>
&lt;p>&lt;figure>
&lt;center>
&lt;img src="./images/broswer-display-ERR_TOO_MANY_REDIRECTS.png" alt="Broswer 錯誤畫面">
&lt;figcaption>Broswer 錯誤畫面&lt;/figcaption>
&lt;/center>
&lt;/figure>
明眼人一看，就知道是 Redirect 重定向過多造成的錯誤。&lt;/p>
&lt;p>而將新開發的 Web API 架設在使用反向代理(Reverse Proxy) 的環境時，遇到這個問題，就順手記錄下來。&lt;/p></description></item><item><title>ASP.NET Core | 問題排除隨手記 - API 回應 HTTP Status 415 Unsupported Media Type</title><link>https://eandev.com/post/troubleshooting/http-response-status-unexpected-note/</link><pubDate>Thu, 09 Mar 2023 16:19:47 +0800</pubDate><guid>https://eandev.com/post/troubleshooting/http-response-status-unexpected-note/</guid><description>&lt;p>有時呼叫 API 時，對方回應的 &lt;code>HTTP Status&lt;/code> 與我們所預期的不同。剛好最近有遇到，就順手記錄下來。&lt;/p>
&lt;blockquote>
&lt;p>🔖 長話短說 🔖&lt;/p>
&lt;ul>
&lt;li>&lt;code>415: Unsupported Media Type&lt;/code> 錯誤，請檢查 &lt;code>Content-Type&lt;/code> 與 &lt;code>Content&lt;/code> 與 API 要求的規範是否相同。&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Docker | 使用 Docker 建置 ASP.NET Webapi 的 Image</title><link>https://eandev.com/post/container/aspnet-webapi-containerized/</link><pubDate>Sun, 26 Feb 2023 14:18:53 +0800</pubDate><guid>https://eandev.com/post/container/aspnet-webapi-containerized/</guid><description>&lt;p>想要使用 Docker 技術將 ASP.NET Web API 應用程式打包成 image 時，需要針對機敏性資料進行特別的處理，以確保這些機密性資料不會外流。&lt;/p>
&lt;p>在本文中，將簡單介紹 Dockerfile 的建置方式，以及如何提供連線字串給 Container 內的應用程式使用。雖然內文只介紹連線字串的部份，但是憑證的處理方式，也是類似的作法。&lt;/p>
&lt;blockquote>
&lt;p>🔖 長話短說 🔖&lt;/p>
&lt;ul>
&lt;li>在使用 Docker 封裝應用程式時，有時需要使用一些機敏性資料，需要額外處理，例如連線字串及憑證資料等。&lt;/li>
&lt;li>Container 的所有設定，都可以透過 &lt;code>docker inspect&lt;/code> 指令查看到，所以傳遞機敏性資料，必須要加密或透過其他方式。&lt;/li>
&lt;li>機敏資料的傳遞，可以透過 &lt;code>環境變數&lt;/code>、&lt;code>命令列參數&lt;/code>與 &lt;code>mount/volume&lt;/code> 的方式。&lt;/li>
&lt;li>Docker Image 建立後，可以使用 &lt;code>docker scan&lt;/code> 指令，進行掃描，確認是否有安全性問題。&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item></channel></rss>